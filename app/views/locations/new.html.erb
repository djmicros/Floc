<% provide(:title, 'Add location') %>
<h1>Add location</h1>

<div class="row">
  <div class="span6 offset3">
    <%= form_for @location, :html => { :class => 'form-horizontal', multipart: true } do |f| %>
	      <%= render 'shared/location_messages' %>
		  
      <%= f.label :name %>
      <%= f.text_field :name %>

      <%= f.label :desc %>
      <%= f.text_area :desc %>

      <%= f.label :geolocation %>
      <%= f.hidden_field :geo %>
      <%= f.hidden_field :latitude %>
      <%= f.hidden_field :longitude %>

    <input id="address-input" type="text" placeholder="Enter location address"></input>
<strong>OR</strong>
      <div id="myLocation" class="btn btn-small btn-info">Find your current location</div>
<strong>OR</strong> Simply click anywhere on a map ;).
      <p id="demo"></p>

      <div id="map" style="width: 100%; height: 300px"></div> 
	  
      <%= f.label :tag_list, "Tags (separated by commas)" %>
      <%= f.text_field :tag_list %>

	  <%= f.label "Electricity?" %>
      <%= f.check_box :electricity %> <br />
	  
	  <%= f.label "Open?" %>
      <%= f.check_box :open %> <br />
	  
	  <%= f.label "Public?" %>
      <%= f.check_box :public %> <br />
	  



	  <%= file_field_tag "photos[]", type: :file, multiple: true, :id => 'filer_input' %>




      <%= f.submit "Create new location", class: "btn btn-large btn-primary" %>
    <% end %>
  </div>
</div>



<script>  
  $(document).ready(function() {
       $('#filer_input').filer({
    limit: 6,
    maxSize: 2,
    extensions: ['jpg', 'jpeg', 'png', 'gif'],
    changeInput: true,
    showThumbs: true,
    addMore: true
});   
  });
</script>



<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAj1VhTA5l4MKf9AloiQ81JkHvjXMedSI4&signed_in=true&libraries=places&callback=initMap" async defer></script>

<script type="text/javascript"> 
  var map = null;
  var marker = null;
  var x = document.getElementById("demo");
  var geo_field = document.getElementById("location_geo");
  var lat_field = document.getElementById("location_latitude");
  var lng_field = document.getElementById("location_longitude");


function initMap() {
  var map = new google.maps.Map(document.getElementById('map'), {
    center: {lat: 50.0646, lng: 19.9449},
    zoom: 5
  });
  var input = /** @type {!HTMLInputElement} */(
      document.getElementById('address-input'));

  var types = document.getElementById('type-selector');
  map.controls[google.maps.ControlPosition.TOP_LEFT].push(types);

  var autocomplete = new google.maps.places.Autocomplete(input);
  autocomplete.bindTo('bounds', map);

  var geocoder = new google.maps.Geocoder;

  var infowindow = new google.maps.InfoWindow();
  var marker = new google.maps.Marker({
    map: map,
    anchorPoint: new google.maps.Point(0, -29),
    icon: '/images/map_pin.png'
  });

  autocomplete.addListener('place_changed', function() {
    infowindow.close();
    marker.setVisible(false);
    var place = autocomplete.getPlace();
    if (!place.geometry) {
      window.alert("Autocomplete's returned place contains no geometry");
      return;
    }
    var latLng = place.geometry.location;

    marker.setPosition(latLng);
    marker.setVisible(true);

    var address = '';
    if (place.address_components) {
      address = [
        (place.address_components[0] && place.address_components[0].short_name || ''),
        (place.address_components[1] && place.address_components[1].short_name || ''),
        (place.address_components[2] && place.address_components[2].short_name || '')
      ].join(' ');
    }

    infowindow.setContent('<div><strong>' + latLng +'</strong><br>' + address);
    infowindow.open(map, marker);

    x.innerHTML = latLng;
    lat_field.value = latLng.toString().slice(1, -1).split(",")[0];
    lng_field.value = latLng.toString().slice(1, -1).split(",")[1];
              geo_field.value = geocoder.geocode( {location:latLng}, function(results, status) 
            {
              if (status == google.maps.GeocoderStatus.OK) 
              {
                geo_field.value = results[0].formatted_address;
                x.innerHTML = results[0].formatted_address;
              } else {
                alert('Geocode was not successful for the following reason: ' + status);
             }
            }); 
  });

  map.addListener('click', function(e) {
    infowindow.close();
    marker.setVisible(false);
    var latLng = e.latLng
      marker.setPosition(latLng);
      marker.setVisible(true);

      infowindow.setContent('<div><strong>' + latLng +'</strong><br>');
      infowindow.open(map, marker);

      x.innerHTML = latLng;
      lat_field.value = latLng.toString().slice(1, -1).split(",")[0];
      lng_field.value = latLng.toString().slice(1, -1).split(",")[1];
                geo_field.value = geocoder.geocode( {location:latLng}, function(results, status) 
            {
              if (status == google.maps.GeocoderStatus.OK) 
              {
                geo_field.value = results[0].formatted_address;
                x.innerHTML = results[0].formatted_address;
              } else {
                alert('Geocode was not successful for the following reason: ' + status);
             }
            });
    map.panTo(latLng);
  });


  $( "#myLocation" ).on( "click", function(){
    var myLatLng = null;
    if (navigator.geolocation) {
        navigator.geolocation.getCurrentPosition(function(position) {
          latLng = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);
          infowindow.close();
          marker.setVisible(false);
          marker.setPosition(latLng);
          marker.setVisible(true);
          infowindow.setContent('<div><strong>' + latLng +'</strong><br>');
          infowindow.open(map, marker);
          x.innerHTML = latLng;
          lat_field.value = latLng.toString().slice(1, -1).split(",")[0];
          lng_field.value = latLng.toString().slice(1, -1).split(",")[1];
          map.panTo(latLng);

          geo_field.value = geocoder.geocode( {location:latLng}, function(results, status) 
            {
              if (status == google.maps.GeocoderStatus.OK) 
              {
                geo_field.value = results[0].formatted_address;
                x.innerHTML = results[0].formatted_address;
              } else {
                alert('Geocode was not successful for the following reason: ' + status);
             }
            });
                    });
              } else { 
                  x.innerHTML = "Geolocation is not supported by this browser.";
              }
  });
}

</script> 

